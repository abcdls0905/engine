

20130618
打算让逻辑更好的处理输入设备的操作
因为我自己也没有很好的想清楚这块设计，
只是为了一个简单希望逻辑能更好的写一个跨平台的代码。而做了一些初步设计。

这里有一些关于触摸手势的概率简要的在这里讲解一下。


在IOS里面，
对于触摸手势，有4种事件
	Touch_Began ,//开始触摸
	Touch_Moved ,//移动触摸
	Touch_Ended ,//结束触摸
	Touch_Cancel ,//取消事件,(比如说来突然来电话了，才会触发该事件）
	

关于CInputEvent的输入事件基类

主要是
把握3个基本数据

PERSISTID GetEventSenderID();
事件发起者PERSISTID 一般指的是事件发送者的实体，
在做事件过滤的时候，可以很方便的进行快速事件过滤，暂时是这样想的。

//获取事件内容
IVarList* GetEventContent();
这里主要是用于用户指定时间内容，可以让逻辑方便的扩展事件本身自带的数据。

//事件发起时间
double GetEventGenTime();
但你创建输入事件的那可游戏时间。
比如要做一个连续点击2次触摸屏
这个时候,你可以通过通过接受2次事件的时间差可以判断手势了。

//事件类型
virtual InputEventType GetEventType() = 0;
主要用来进行过滤处理


20130715
对于手势的理解，
我发出手势编程实际上还是比较麻烦的。
因为难点主要是手势之间的相互逻辑的独立性关系原因。
还有就是手势识别的这个逻辑，如何简化也是具有一定难度的。
这些原因，让我思考如何，
将手势编写跟易用性上面投入跟多的思考。