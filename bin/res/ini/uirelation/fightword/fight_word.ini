[self_damage_hp]
#怪物攻击玩家
# 字体
font = baise03

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -35,-35,-40,-40

# 延时出现时间 min, max
delay_time = 0,50
# 存在时间 min,max
life_time = 500,500
# 暂停时间 begin, end
pause_time = 30,100

# x 轴速度决定了文字是向左飘，还是向右飘
# 初速度min, max
vel_x_begin = 0,0
vel_y_begin = 0,0

# x,Y轴加速度 min, max
acc_x = 0.0,0.0
acc_y = 0.0,0.6

# 暂停后速度: min, max
vel_x_middle = 0,0
vel_y_middle = 0,0

# 字体大小 begin,middle,end
size_x = 30,20,20
size_y = 30,20,20
# 透明度
alpha = 200,255,255

#数字前面的图片大小（相对于数字的倍数）
picture_x = 1.5
picture_y = 1


[self_Bva]
#玩家被暴击
font = baise03

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -20,-15,-50,-45

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 500,500
# 暂停时间 begin, end
pause_time = 50,100

# x 轴速度决定了文字是向左飘，还是向右飘
# 初速度min, max
vel_x_begin = 0.0,0
vel_y_begin = 0.0,1.2
# x,Y轴加速度 min, max
acc_x = 0.0,0.0
acc_y = 0,0.6

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0

#字体大小 begin,middle,end
size_x = 45,30,30
size_y = 45,30,30
alpha = 155,255,200

#数字前面的图片大小（相对于数字的倍数）
picture_x = 0
picture_y = 0


[other_damage_hp]
#普通伤害（主控玩家攻击）
#interval = 10
font = baise14

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -200,-200,-150,-150

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 100,100

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, maxdw
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 100,30,20
size_y = 100,30,20
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2
show_all = 1


[skill_damage_hp]
#技能伤害（主控玩家攻击）
#interval = 10
font = baise14

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -200,-200,-150,-150

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 100,200

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 6,6
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 100,30,20
size_y = 100,30,20
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2
show_all = 1


[other_Bva]
#暴击
font = baise20

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -200,-200,-200,-200

#min, max
delay_time = 0,0
#min,max
life_time = 600,600
#begin, end
pause_time = 100,500

#暂停时左右震动
#vibratetime = 200
#vibratepos = 70
#vibratecount = 1

#min, max
vel_x_begin = 0,0
vel_y_begin = 80,80

acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 150,40,0
size_y = 150,40,0
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 2.6
picture_y = 1.3
picture_dir = 3
picture_place = 0.015


#用于图片和数字分开的情况 (不配就没有)
picture_script = other_Bva_p
picture_word = 1

[pet_damage_hp]
#普通伤害（副将攻击）
#interval = 10
font = baise25

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -160,-160,-140,-140

#延时出现时间 min, max
delay_time = 0,0
#存在时间 min,max
life_time = 500,500
#暂停时间 begin, end
pause_time = 100,400

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 72,72
# x,Y轴加速度 min, maxdw
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 70,20,0
size_y = 70,20,0
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2

[pet_skill_damage_hp]
#普通伤害（副将技能攻击）
#interval = 10
font = baise25

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -160,-160,-140,-140

#延时出现时间 min, max
delay_time = 0,0
#存在时间 min,max
life_time = 500,500
#暂停时间 begin, end
pause_time = 100,400

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 72,72
# x,Y轴加速度 min, maxdw
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 70,20,0
size_y = 70,20,0
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2

[pet_Bva]
#副将暴击
font = baise13

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -200,-200,-200,-200

#min, max
delay_time = 0,0
#min,max
life_time = 600,600
#begin, end
pause_time = 100,500

#暂停时左右震动
#vibratetime = 200
#vibratepos = 70
#vibratecount = 1

#min, max
vel_x_begin = 0,0
vel_y_begin = 80,80

acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 130,25,0
size_y = 120,25,0
alpha = 255,200,200

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 2.6
picture_y = 1.3
picture_dir = 3
picture_place = 0.015


[gedang]
#格挡
font = gedang

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -12,12,-135,-135

#min, max
delay_time = 0,0
#min,max
life_time = 600,600
#begin, end
pause_time = 100,580

#min, max
vel_x_begin = 0,0
vel_y_begin = 0,0

acc_x = 0,0
acc_y = 0,0
acc_size=2,2,2

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 0,0

#字体大小 begin,middle,end
size_x = 15,25,20
size_y = 15,25,20
alpha = 200,255,200

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 5
picture_y = 2
picture_dir = 3
picture_place = 0.015

[xishou]
#格挡
font = xishou

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -12,12,-100,-100

#min, max
delay_time = 0,0
#min,max
life_time = 600,600
#begin, end
pause_time = 100,580

#min, max
vel_x_begin = 0,0
vel_y_begin = 0,0

acc_x = 0,0
acc_y = 0,0
acc_size=2,2,2

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 0,0

#字体大小 begin,middle,end
size_x = 10,20,15
size_y = 10,20,15
alpha = 150,200,150

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 5
picture_y = 2
picture_dir = 3
picture_place = 0.015

[zhongchuang]
#重创
#interval = 15
font = zhongchuang

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -12,12,-135,-135

#min, max
delay_time = 0,0
#min,max
life_time = 600,600
#begin, end
pause_time = 100,580

#min, max
vel_x_begin = 0,0
vel_y_begin = 0,0

acc_x = 0,0
acc_y = 0,0
acc_size=2,2,2

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 0,0

#字体大小 begin,middle,end
size_x = 15,25,20
size_y = 15,25,20
alpha = 200,255,200

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 5
picture_y = 4
picture_dir = 3
picture_place = 0.015


[self_Damage_Fire]
#火元素伤害
#interval = 10
font = baise21

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -10,-10,-90,-95

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 500,600

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 60,20,20
size_y = 60,20,20
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2

[self_Damage_Fire vice]
#副将火元素伤害
#interval = 10
font = baise21

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -10,-10,-90,-95

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 500,600

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 30,10,10
size_y = 30,10,10
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2

[self_Damage_Ice]
#冰元素伤害
#interval = 10
font = baise22

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -10,-10,-90,-95

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 500,600

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 60,20,20
size_y = 60,20,20
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2

[self_Damage_Ice vice]
#副将冰元素伤害
#interval = 10
font = baise22

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -10,-10,-90,-95

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 1000,1000

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 30,10,10
size_y = 30,10,10
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2

[self_Damage_Light]
#电元素伤害
#interval = 10
font = baise23

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -10,-10,-90,-95

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 500,600

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 60,20,20
size_y = 60,20,20
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2

[self_Damage_Light vice]
#副将电元素伤害
#interval = 10
font = baise23

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -10,-10,-90,-95

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 500,600

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 30,10,10
size_y = 30,10,10
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2

[self_Damage_Posion]
#毒元素伤害
#interval = 10
font = baise26

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -10,-10,-90,-95

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 500,600

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 60,20,20
size_y = 60,20,20
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2

[self_Damage_Soil]
#土元素伤害
#interval = 10
font = baise28

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -10,-10,-90,-95

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 500,600

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 60,20,20
size_y = 60,20,20
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2


[self_Damage_Wind]
#风元素伤害
#interval = 10
font = baise27

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -10,-10,-90,-95

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 500,600

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 60,20,20
size_y = 60,20,20
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 0

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 3
picture_y = 1
picture_dir = 3
picture_place = 0.2


[buff_damage_hp]
#buff伤害
#interval = 10
font = baise02

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -35,-35,-40,-40

# 延时出现时间 min, max
delay_time = 0,50
# 存在时间 min,max
life_time = 500,500
# 暂停时间 begin, end
pause_time = 30,100

# x 轴速度决定了文字是向左飘，还是向右飘
# 初速度min, max
vel_x_begin = 0,0
vel_y_begin = 0,0

# x,Y轴加速度 min, max
acc_x = 0.0,0.0
acc_y = 0.0,0.6

# 暂停后速度: min, max
vel_x_middle = 0,0
vel_y_middle = 0,0

# 字体大小 begin,middle,end
size_x = 30,20,20
size_y = 30,20,20
# 透明度
alpha = 200,255,255

#数字前面的图片大小（相对于数字的倍数）
picture_x = 1.5
picture_y = 1


[self_Damage_Buff_Crit]
#buff暴击伤害
#interval = 10
font = baise13

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -45,-35,-110,-110

#min, max
delay_time = 0,0
#min,max
life_time = 600,600
#begin, end
pause_time = 100,500

#暂停时左右震动
#vibratetime = 200
#vibratepos = 70
#vibratecount = 1

#min, max
vel_x_begin = 0,0
vel_y_begin = 80,80

acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 90,20,0
size_y = 70,20,0
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 2.6
picture_y = 1.3
picture_dir = 3
picture_place = 0.015


[other_Bva_p]
#重击图片
font = baise01

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -75,-75,-65,-65

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 800,800
# 暂停时间 begin, end
pause_time = 0,15

# x 轴速度决定了文字是向左飘，还是向右飘
# 初速度min, max
vel_x_begin = 0.0,0
vel_y_begin = 0.0,0.0
# x,Y轴加速度 min, max
acc_x = 0.0,0.0
acc_y = -0.03,0.00

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0.0

#字体大小 begin,middle,end
size_x = 102,102,102
size_y = 48,48,48
alpha = 250,250,0




[self_AddHP]
#加血
# 字体
font = baise19

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -10,-10,-90,-95

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 800,800
#暂停时间 begin, end
pause_time = 200,300

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 0,0
vel_y_begin = 12,12
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 60,30,30
size_y = 60,30,30
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 1.2
picture_y = 1.2
picture_dir = 3
picture_place = -1

[self_AddMP]
#加蓝
# 字体
font = baise01

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -16,16,-10,15

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 1000,1500
# 暂停时间 begin, end
pause_time = 0,0

# x 轴速度决定了文字是向左飘，还是向右飘
# 初速度min, max
vel_x_begin = -0.5,2
vel_y_begin = -0.5,0.5
# x,Y轴加速度 min, max
acc_x = 0.0,0.0
acc_y = 0.01,0.01

# 暂停后速度: min, max
vel_x_middle = -0.5,2
vel_y_middle = -0.5,0.5

# 字体大小 begin,middle,end
size_x = 5.2,10.4,10.4
size_y = 8,16,16
# 透明度
alpha = 120,180,20


[self_AddMoney]
#加钱
# 字体
font = baise02

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = 0,0,-70,-70

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 800,800
# 暂停时间 begin, end
pause_time = 80,240

# x 轴速度决定了文字是向左飘，还是向右飘
# 初速度min, max
vel_x_begin = 0,0
vel_y_begin = 0.3,0.3
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -0.01,-0.01

# 暂停后速度: min, max
vel_x_middle = 0,0
vel_y_middle = 0,0

# 字体大小 begin,middle,end
size_x = 15,18,18
size_y = 15,18,18
# 透明度
alpha = 198,255,200

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 1.1
picture_y = 1.1
picture_dir = 3
picture_place = 0.2


[self_Spite]
# 怪物欺凌玩家
#interval = 10
font = baise01

#left, right, top, bottom
origin_rect = -10,10,80,90

#min, max
delay_time = 0,80
#min,max
life_time = 450,450
#begin, end
pause_time = 80,250

#min, max
vel_x_begin = -3,3
vel_y_begin = 4,5.5
acc_y = 0.1,0.1

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 0.55,0.55

#begin,middle,end
size_x = 5.2,13,15.6
size_y = 8,20,24
alpha = 150,180,180



[self_Bva_p]
#重击图片
font = baise01

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -75,-75,-65,-65

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 800,800
# 暂停时间 begin, end
pause_time = 0,15

# x 轴速度决定了文字是向左飘，还是向右飘
# 初速度min, max
vel_x_begin = 0.0,0
vel_y_begin = 0.0,0.0
# x,Y轴加速度 min, max
acc_x = 0.0,0.0
acc_y = -0.03,0.00

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0.0

#字体大小 begin,middle,end
size_x = 102,102,102
size_y = 48,48,48
alpha = 250,250,0

#-------------------------------------



[other_Failing]
#主角弱点攻击
#interval = 10
font = baise01

#left, right, top, bottom
origin_rect = -15,10,50,60

#min, max
delay_time = 0,100
#min,max
life_time = 450,450
#begin, end
pause_time = 80,250

#min, max
vel_x_begin = 0,0
vel_y_begin =4,5.5
acc_y = 0,0

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 4,5.5

#begin,middle,end
size_x = 5.2,13,15.6
size_y = 8,20,24
alpha = 180,220,180

[other_FailingVa]
#主角弱点攻击暴击
#interval = 10
font = huangse01

#left, right, top, bottom
origin_rect = -15,10,-15,15

#min, max
delay_time = 0,400
#min,max
life_time = 450,450
#begin, end
pause_time = 50,70

#min, max
vel_x_begin = 0,0
vel_y_begin =2,0.4
acc_y = 0,0

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 2,4

#begin,middle,end
size_x = 2,10,15
size_y = 2,10,15
alpha = 180,220,180

[self_failing]
#NPC攻击弱点暴击
#interval = 10
font = baise01

#left, right, top, bottom
origin_rect = -10,10,80,90

#min, max
delay_time = 0,80
#min,max
life_time = 450,450
#begin, end
pause_time = 80,250

#min, max
vel_x_begin = -3,3
vel_y_begin = 4,5.5
acc_y = 0.1,0.1

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 0.55,0.55

#begin,middle,end
size_x = 5.2,125,15.6
size_y = 8,58,24
alpha = 150,100,180

[miss]
#闪避
#interval = 10
font =miss

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = 0,0,-120,-120

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 600,600
# 暂停时间 begin, end
pause_time = 100,300

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0

#字体大小 begin,middle,end
size_x = 75,55,55
size_y = 75,55,55
alpha = 255,235,235

[other_Miss]
#闪避
#interval = 10
font =other_Miss

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = 0,0,-20,-20

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 600,600
# 暂停时间 begin, end
pause_time = 100,300

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0

#字体大小 begin,middle,end
size_x = 60,40,40
size_y = 60,40,40
alpha = 255,235,235


[mysh]
#免疫伤害
#interval = 10
font =mysh

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = 0,0,-120,-120

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 600,600
# 暂停时间 begin, end
pause_time = 100,300

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0

#字体大小 begin,middle,end
size_x = 160,100,100
size_y = 80,50,50
alpha = 255,235,235



[other_mysh]
#免疫伤害（受击）
#interval = 10
font =other_mysh

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = 0,0,-20,-20

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 600,600
# 暂停时间 begin, end
pause_time = 100,300

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0

#字体大小 begin,middle,end
size_x = 90,70,70
size_y = 70,50,50
alpha = 255,235,235

[mykz]
#免疫控制
#interval = 10
font =mykz

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = 0,0,-120,-120

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 600,600
# 暂停时间 begin, end
pause_time = 100,300

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0

#字体大小 begin,middle,end
size_x = 160,100,100
size_y = 80,50,50
alpha = 255,235,235



[other_mykz]
#免疫控制（受击）
#interval = 10
font =other_mykz

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = 120,120,-80,-80

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 600,600
# 暂停时间 begin, end
pause_time = 100,300

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 60,60
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0

#字体大小 begin,middle,end
size_x = 90,70,70
size_y = 70,50,50
alpha = 255,235,235

[wudi]
#无敌
#interval = 10
font =

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = 0,0,-120,-120

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 600,600
# 暂停时间 begin, end
pause_time = 100,300

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0

#字体大小 begin,middle,end
size_x = 160,100,100
size_y = 80,50,50
alpha = 255,235,235


[fanshang]
#反伤
font = baise34

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -35,-35,-40,-40

# 延时出现时间 min, max
delay_time = 0,50
# 存在时间 min,max
life_time = 500,500
# 暂停时间 begin, end
pause_time = 30,100

# x 轴速度决定了文字是向左飘，还是向右飘
# 初速度min, max
vel_x_begin = 0,0
vel_y_begin = 0,0

# x,Y轴加速度 min, max
acc_x = 0.0,0.0
acc_y = 0.0,0.6

# 暂停后速度: min, max
vel_x_middle = 0,0
vel_y_middle = 0,0

# 字体大小 begin,middle,end
size_x = 30,20,20
size_y = 30,20,20
# 透明度
alpha = 200,255,255

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 4
picture_y = 2
picture_dir = 3
picture_place = 0.2
show_all = 1

[jianshang]
#减伤
font = baise32

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -35,-35,-40,-40

# 延时出现时间 min, max
delay_time = 0,50
# 存在时间 min,max
life_time = 500,500
# 暂停时间 begin, end
pause_time = 30,100

# x 轴速度决定了文字是向左飘，还是向右飘
# 初速度min, max
vel_x_begin = 0,0
vel_y_begin = 0,0

# x,Y轴加速度 min, max
acc_x = 0.0,0.0
acc_y = 0.0,0.6

# 暂停后速度: min, max
vel_x_middle = 0,0
vel_y_middle = 0,0

# 字体大小 begin,middle,end
size_x = 30,20,20
size_y = 30,20,20
# 透明度
alpha = 200,255,255

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 4
picture_y = 2
picture_dir = 3
picture_place = 0.2
show_all = 1

[zengshang]
#增伤(受击)
font = baise33

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = -35,-35,-40,-40

# 延时出现时间 min, max
delay_time = 0,50
# 存在时间 min,max
life_time = 500,500
# 暂停时间 begin, end
pause_time = 30,100

# x 轴速度决定了文字是向左飘，还是向右飘
# 初速度min, max
vel_x_begin = 0,0
vel_y_begin = 0,0

# x,Y轴加速度 min, max
acc_x = 0.0,0.0
acc_y = 0.0,0.6

# 暂停后速度: min, max
vel_x_middle = 0,0
vel_y_middle = 0,0

# 字体大小 begin,middle,end
size_x = 30,20,20
size_y = 30,20,20
# 透明度
alpha = 200,255,255

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 4
picture_y = 2
picture_dir = 3
picture_place = 0.2
show_all = 1

[qiangpo]
#强破（攻击方显示）
#interval = 10
font =qiangpo

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = 0,0,-100,-100

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 600,600
# 暂停时间 begin, end
pause_time = 100,300

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0

#字体大小 begin,middle,end
size_x = 160,100,100
size_y = 80,50,50
alpha = 255,235,235

[other_qiangpo]
#强破
#interval = 10
font =other_qiangpo

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = 15,15,10,10

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 600,600
# 暂停时间 begin, end
pause_time = 100,300

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0

#字体大小 begin,middle,end
size_x = 90,70,70
size_y = 70,50,50
alpha = 255,235,235

[other_wudi]
#无敌（受击）
#interval = 10
font =

# left<right, top<bottom
# 出现位置 left, right, top, bottom
origin_rect = 30,30,-35,-35

# 延时出现时间 min, max
delay_time = 0,0
# 存在时间 min,max
life_time = 600,600
# 暂停时间 begin, end
pause_time = 100,300

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = 60,60
vel_y_begin = 72,72
# x,Y轴加速度 min, max
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

# 暂停后速度: min, max
vel_x_middle = 0.0,0
vel_y_middle = 0.0,0

#字体大小 begin,middle,end
size_x = 90,70,70
size_y = 70,50,50
alpha = 255,235,235

[other_fanshang]
#反伤
font = baise29

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -200,-200,-150,-150

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 100,100

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, maxdw
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 100,30,20
size_y = 100,30,20
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 4
picture_y = 2
picture_dir = 3
picture_place = 0.2
show_all = 1

[other_jianshang]
#减伤
font = baise30

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -200,-200,-150,-150

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 100,100

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, maxdw
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 100,30,20
size_y = 100,30,20
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 4
picture_y = 2
picture_dir = 3
picture_place = 0.2
show_all = 1

[other_zengshang]
#增伤
font = baise31

# left<right, top<bottom
#出现位置 left, right, top, bottom
origin_rect = -200,-200,-150,-150

#延时出现时间 min, max
delay_time = 0,100
#存在时间 min,max
life_time = 700,700
#暂停时间 begin, end
pause_time = 100,100

#x初速度min, max X轴速度决定了文字是向左飘，还是向右飘
vel_x_begin = -60,-60
vel_y_begin = 72,72
# x,Y轴加速度 min, maxdw
acc_x = 0,0
acc_y = -3.6,-3.6
acc_size=1,1,1

#暂停后速度 after pause:qqq min, max
vel_x_middle = 0,0
vel_y_middle = 6,6

#字体大小 begin,middle,end
size_x = 100,30,20
size_y = 100,30,20
alpha = 255,240,240

#这个参数用于哪一种图片显示方式（0为不显示图片，1用绑定显示，2用分离显示）
#资源中配置 “P”选项为图片资源
existpicture = 1

#picture_x,picture_y表示数字前面的图片大小（相对于数字的倍数）
#picture_dir的值为1，2，3，4（分别表示图片位置在数字的上，下，左，右）
#pictrue_place表示数字和图片的相隔距离(相对于宽高的倍数)
picture_x = 4
picture_y = 2
picture_dir = 3
picture_place = 0.2
show_all = 1

[atribute]
#属性增加
#interval = 10
font =baise01

#left, right, top, bottom
origin_rect = -10,-10,10,9

#min, max
delay_time = 0,80
#min,max
life_time = 400,450
#begin, end
pause_time = 80,100

#min, max
vel_x_begin = -3,3
vel_y_begin = 4,5.5
acc_y = 0.1,0.1

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 0.55,0.55

#begin,middle,end
size_x = 5.2,100,15.6
size_y = 8,27,24
alpha = 150,180,180

[Enter_battle]
#属性增加
#interval = 10
font = baise01

#left, right, top, bottom
origin_rect = -10,-10,10,9

#min, max
delay_time = 0,80
#min,max
life_time = 400,450
#begin, end
pause_time = 80,100

#min, max
vel_x_begin = -3,3
vel_y_begin = 4,5.5
acc_y = 0.1,0.1

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 0.55,0.55

#begin,middle,end
size_x = 5.2,100,15.6
size_y = 8,27,24
alpha = 150,180,180

[Quit_battle]
#属性增加
#interval = 10
font = baise01

#left, right, top, bottom
origin_rect = -10,-10,10,9

#min, max
delay_time = 0,80
#min,max
life_time = 400,450
#begin, end
pause_time = 80,100

#min, max
vel_x_begin = -3,3
vel_y_begin = 4,5.5
acc_y = 0.1,0.1

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 0.55,0.55

#begin,middle,end
size_x = 5.2,100,15.6
size_y = 8,27,24
alpha = 150,180,180

[npc_destoryself_time]
font = baise01

#left, right, top, bottom
origin_rect = -20,20,-20,20

#min, max
delay_time = 0,800
#min,max
life_time = 800,1150
#begin, end
pause_time = 1000,1000

#min, max
vel_x_begin = 0,0
vel_y_begin =4,5
acc_y = 0.08,0.08

#after pause: min, max
vel_x_middle = 0,0
vel_y_middle = 8,10

#begin,middle,end
size_x = 10,25,15
size_y = 20,25,15
alpha = 50,220,50